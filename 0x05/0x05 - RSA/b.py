def find_invpow(x,n):
    """Finds the integer component of the n'th root of x,
    an integer such that y ** n <= x < (y + 1) ** n.
    """
    high = 1
    while high ** n <= x:
        high *= 2
    low = 1
    while low < high:
        mid = (low + high) // 2
        if low < mid and mid**n < x:
            low = mid
        elif high > mid and mid**n > x:
            high = mid
        else:
            return mid
    return mid + 1
x=(find_invpow(1283803206848980791789416022162597334580912479557186849127487991440484135624717611753802664821553545586893011554218643701300250573069834618158997362085820492318836220558919532388396239455865690674291620293889350996146780751890209975128442528806435093755875863245430916247541828331736596842631919953525214895897847195887570041343452102564705732088184868017729175351902277514302275959064716152642760201538712404117148263147903125494899488627028528251046505821288738352531544306392475578084791495027317786782792806119217864851165414554165467553381935851287056546866091706944471700020790206056040497319046084080589015940992732745926529045924371421316558279716491087738009683226435890283020773930313754346001964705662480887977142276398002392266235559035687344693474327144660507358482417502952131112912696942325368286282865076931516296811688547182259034069669335710834783276131395646366246301763043882095113015612651879130489799658414805547640224661376543294643853436486694515486705138236346538015171088670258065056747805755011859494956558441648086385567842285015332425659894745756092658077356073135610665686213701135596868627647977014290132054928005597048268389066136104621557140469,7))
y=hex(x)[2:]
print(''.join([chr(int(''.join(c), 16)) for c in zip(y[0::2],y[1::2])]))