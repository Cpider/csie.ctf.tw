
./patch2-9af9d166e427e8a334d5746320ab7eb7：     檔案格式 elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x243>
  400248:	78 38                	js     400282 <_init-0x236>
  40024a:	36                   	ss
  40024b:	2d 36 34 2e 73       	sub    $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 20                	add    %ah,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 a4 7b 06 2c c4 b1 	add    %ah,-0x4e3bd3fa(%rbx,%rdi,2)
  40028a:	3e                   	ds
  40028b:	f4                   	hlt    
  40028c:	1f                   	(bad)  
  40028d:	9d                   	popfq  
  40028e:	ff 4e fb             	decl   -0x5(%rsi)
  400291:	0c d3                	or     $0xd3,%al
  400293:	4f 17                	rex.WRXB (bad) 
  400295:	14 9d                	adc    $0x9d,%al
  400297:	70                   	.byte 0x70

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	30 00                	xor    %al,(%rax)
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	1a 00                	sbb    (%rax),%al
  4002ea:	00 00                	add    %al,(%rax)
  4002ec:	12 00                	adc    (%rax),%al
	...
  4002fe:	00 00                	add    %al,(%rax)
  400300:	1f                   	(bad)  
  400301:	00 00                	add    %al,(%rax)
  400303:	00 12                	add    %dl,(%rdx)
	...
  400315:	00 00                	add    %al,(%rax)
  400317:	00 38                	add    %bh,(%rax)
  400319:	00 00                	add    %al,(%rax)
  40031b:	00 12                	add    %dl,(%rdx)
	...
  40032d:	00 00                	add    %al,(%rax)
  40032f:	00 4a 00             	add    %cl,0x0(%rdx)
  400332:	00 00                	add    %al,(%rax)
  400334:	20 00                	and    %al,(%rax)
	...
  400346:	00 00                	add    %al,(%rax)
  400348:	0b 00                	or     (%rax),%eax
  40034a:	00 00                	add    %al,(%rax)
  40034c:	12 00                	adc    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000400360 <.dynstr>:
  400360:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  400364:	63 2e                	movslq (%rsi),%ebp
  400366:	73 6f                	jae    4003d7 <_init-0xe1>
  400368:	2e 36 00 5f 5f       	cs add %bl,%cs:%ss:0x5f(%rdi)
  40036d:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%rbx),%esi
  400374:	73 63                	jae    4003d9 <_init-0xdf>
  400376:	61                   	(bad)  
  400377:	6e                   	outsb  %ds:(%rsi),(%dx)
  400378:	66                   	data16
  400379:	00 70 75             	add    %dh,0x75(%rax)
  40037c:	74 73                	je     4003f1 <_init-0xc7>
  40037e:	00 5f 5f             	add    %bl,0x5f(%rdi)
  400381:	73 74                	jae    4003f7 <_init-0xc1>
  400383:	61                   	(bad)  
  400384:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
  400387:	63 68 6b             	movslq 0x6b(%rax),%ebp
  40038a:	5f                   	pop    %rdi
  40038b:	66                   	data16
  40038c:	61                   	(bad)  
  40038d:	69 6c 00 70 75 74 63 	imul   $0x68637475,0x70(%rax,%rax,1),%ebp
  400394:	68 
  400395:	61                   	(bad)  
  400396:	72 00                	jb     400398 <_init-0x120>
  400398:	5f                   	pop    %rdi
  400399:	5f                   	pop    %rdi
  40039a:	6c                   	insb   (%dx),%es:(%rdi)
  40039b:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  4003a2:	72 74                	jb     400418 <_init-0xa0>
  4003a4:	5f                   	pop    %rdi
  4003a5:	6d                   	insl   (%dx),%es:(%rdi)
  4003a6:	61                   	(bad)  
  4003a7:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%rsi),%ebp
  4003ae:	6f                   	outsl  %ds:(%rsi),(%dx)
  4003af:	6e                   	outsb  %ds:(%rsi),(%dx)
  4003b0:	5f                   	pop    %rdi
  4003b1:	73 74                	jae    400427 <_init-0x91>
  4003b3:	61                   	(bad)  
  4003b4:	72 74                	jb     40042a <_init-0x8e>
  4003b6:	5f                   	pop    %rdi
  4003b7:	5f                   	pop    %rdi
  4003b8:	00 47 4c             	add    %al,0x4c(%rdi)
  4003bb:	49                   	rex.WB
  4003bc:	42                   	rex.X
  4003bd:	43 5f                	rex.XB pop %r15
  4003bf:	32 2e                	xor    (%rsi),%ch
  4003c1:	37                   	(bad)  
  4003c2:	00 47 4c             	add    %al,0x4c(%rdi)
  4003c5:	49                   	rex.WB
  4003c6:	42                   	rex.X
  4003c7:	43 5f                	rex.XB pop %r15
  4003c9:	32 2e                	xor    (%rsi),%ch
  4003cb:	34 00                	xor    $0x0,%al
  4003cd:	47                   	rex.RXB
  4003ce:	4c                   	rex.WR
  4003cf:	49                   	rex.WB
  4003d0:	42                   	rex.X
  4003d1:	43 5f                	rex.XB pop %r15
  4003d3:	32 2e                	xor    (%rsi),%ch
  4003d5:	32 2e                	xor    (%rsi),%ch
  4003d7:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000004003da <.gnu.version>:
  4003da:	00 00                	add    %al,(%rax)
  4003dc:	02 00                	add    (%rax),%al
  4003de:	02 00                	add    (%rax),%al
  4003e0:	03 00                	add    (%rax),%eax
  4003e2:	02 00                	add    (%rax),%al
  4003e4:	00 00                	add    %al,(%rax)
  4003e6:	04 00                	add    $0x0,%al

Disassembly of section .gnu.version_r:

00000000004003e8 <.gnu.version_r>:
  4003e8:	01 00                	add    %eax,(%rax)
  4003ea:	03 00                	add    (%rax),%eax
  4003ec:	01 00                	add    %eax,(%rax)
  4003ee:	00 00                	add    %al,(%rax)
  4003f0:	10 00                	adc    %al,(%rax)
  4003f2:	00 00                	add    %al,(%rax)
  4003f4:	00 00                	add    %al,(%rax)
  4003f6:	00 00                	add    %al,(%rax)
  4003f8:	17                   	(bad)  
  4003f9:	69 69 0d 00 00 04 00 	imul   $0x40000,0xd(%rcx),%ebp
  400400:	59                   	pop    %rcx
  400401:	00 00                	add    %al,(%rax)
  400403:	00 10                	add    %dl,(%rax)
  400405:	00 00                	add    %al,(%rax)
  400407:	00 14 69             	add    %dl,(%rcx,%rbp,2)
  40040a:	69 0d 00 00 03 00 63 	imul   $0x63,0x30000(%rip),%ecx        # 430414 <__FRAME_END__+0x2fa0c>
  400411:	00 00 00 
  400414:	10 00                	adc    %al,(%rax)
  400416:	00 00                	add    %al,(%rax)
  400418:	75 1a                	jne    400434 <_init-0x84>
  40041a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400420:	6d                   	insl   (%dx),%es:(%rdi)
  400421:	00 00                	add    %al,(%rax)
  400423:	00 00                	add    %al,(%rax)
  400425:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400428 <.rela.dyn>:
  400428:	f8                   	clc    
  400429:	0f 60 00             	punpcklbw (%rax),%mm0
  40042c:	00 00                	add    %al,(%rax)
  40042e:	00 00                	add    %al,(%rax)
  400430:	06                   	(bad)  
  400431:	00 00                	add    %al,(%rax)
  400433:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 400439 <_init-0x7f>
  400439:	00 00                	add    %al,(%rax)
  40043b:	00 00                	add    %al,(%rax)
  40043d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.plt:

0000000000400440 <.rela.plt>:
  400440:	18 10                	sbb    %dl,(%rax)
  400442:	60                   	(bad)  
  400443:	00 00                	add    %al,(%rax)
  400445:	00 00                	add    %al,(%rax)
  400447:	00 07                	add    %al,(%rdi)
  400449:	00 00                	add    %al,(%rax)
  40044b:	00 01                	add    %al,(%rcx)
	...
  400455:	00 00                	add    %al,(%rax)
  400457:	00 20                	add    %ah,(%rax)
  400459:	10 60 00             	adc    %ah,0x0(%rax)
  40045c:	00 00                	add    %al,(%rax)
  40045e:	00 00                	add    %al,(%rax)
  400460:	07                   	(bad)  
  400461:	00 00                	add    %al,(%rax)
  400463:	00 02                	add    %al,(%rdx)
	...
  40046d:	00 00                	add    %al,(%rax)
  40046f:	00 28                	add    %ch,(%rax)
  400471:	10 60 00             	adc    %ah,0x0(%rax)
  400474:	00 00                	add    %al,(%rax)
  400476:	00 00                	add    %al,(%rax)
  400478:	07                   	(bad)  
  400479:	00 00                	add    %al,(%rax)
  40047b:	00 03                	add    %al,(%rbx)
	...
  400485:	00 00                	add    %al,(%rax)
  400487:	00 30                	add    %dh,(%rax)
  400489:	10 60 00             	adc    %ah,0x0(%rax)
  40048c:	00 00                	add    %al,(%rax)
  40048e:	00 00                	add    %al,(%rax)
  400490:	07                   	(bad)  
  400491:	00 00                	add    %al,(%rax)
  400493:	00 04 00             	add    %al,(%rax,%rax,1)
	...
  40049e:	00 00                	add    %al,(%rax)
  4004a0:	38 10                	cmp    %dl,(%rax)
  4004a2:	60                   	(bad)  
  4004a3:	00 00                	add    %al,(%rax)
  4004a5:	00 00                	add    %al,(%rax)
  4004a7:	00 07                	add    %al,(%rdi)
  4004a9:	00 00                	add    %al,(%rax)
  4004ab:	00 06                	add    %al,(%rsi)
	...

Disassembly of section .init:

00000000004004b8 <_init>:
  4004b8:	48 83 ec 08          	sub    $0x8,%rsp
  4004bc:	48 8b 05 35 0b 20 00 	mov    0x200b35(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  4004c3:	48 85 c0             	test   %rax,%rax
  4004c6:	74 05                	je     4004cd <_init+0x15>
  4004c8:	e8 73 00 00 00       	callq  400540 <__isoc99_scanf@plt+0x10>
  4004cd:	48 83 c4 08          	add    $0x8,%rsp
  4004d1:	c3                   	retq   

Disassembly of section .plt:

00000000004004e0 <putchar@plt-0x10>:
  4004e0:	ff 35 22 0b 20 00    	pushq  0x200b22(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004e6:	ff 25 24 0b 20 00    	jmpq   *0x200b24(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004f0 <putchar@plt>:
  4004f0:	ff 25 22 0b 20 00    	jmpq   *0x200b22(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4004f6:	68 00 00 00 00       	pushq  $0x0
  4004fb:	e9 e0 ff ff ff       	jmpq   4004e0 <_init+0x28>

0000000000400500 <puts@plt>:
  400500:	ff 25 1a 0b 20 00    	jmpq   *0x200b1a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400506:	68 01 00 00 00       	pushq  $0x1
  40050b:	e9 d0 ff ff ff       	jmpq   4004e0 <_init+0x28>

0000000000400510 <__stack_chk_fail@plt>:
  400510:	ff 25 12 0b 20 00    	jmpq   *0x200b12(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400516:	68 02 00 00 00       	pushq  $0x2
  40051b:	e9 c0 ff ff ff       	jmpq   4004e0 <_init+0x28>

0000000000400520 <__libc_start_main@plt>:
  400520:	ff 25 0a 0b 20 00    	jmpq   *0x200b0a(%rip)        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400526:	68 03 00 00 00       	pushq  $0x3
  40052b:	e9 b0 ff ff ff       	jmpq   4004e0 <_init+0x28>

0000000000400530 <__isoc99_scanf@plt>:
  400530:	ff 25 02 0b 20 00    	jmpq   *0x200b02(%rip)        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400536:	68 04 00 00 00       	pushq  $0x4
  40053b:	e9 a0 ff ff ff       	jmpq   4004e0 <_init+0x28>

Disassembly of section .plt.got:

0000000000400540 <.plt.got>:
  400540:	ff 25 b2 0a 20 00    	jmpq   *0x200ab2(%rip)        # 600ff8 <_DYNAMIC+0x1d0>
  400546:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000400550 <_start>:
  400550:	31 ed                	xor    %ebp,%ebp
  400552:	49 89 d1             	mov    %rdx,%r9
  400555:	5e                   	pop    %rsi
  400556:	48 89 e2             	mov    %rsp,%rdx
  400559:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40055d:	50                   	push   %rax
  40055e:	54                   	push   %rsp
  40055f:	49 c7 c0 70 08 40 00 	mov    $0x400870,%r8
  400566:	48 c7 c1 00 08 40 00 	mov    $0x400800,%rcx
  40056d:	48 c7 c7 53 07 40 00 	mov    $0x400753,%rdi
  400574:	e8 a7 ff ff ff       	callq  400520 <__libc_start_main@plt>
  400579:	f4                   	hlt    
  40057a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400580 <deregister_tm_clones>:
  400580:	b8 57 10 60 00       	mov    $0x601057,%eax
  400585:	55                   	push   %rbp
  400586:	48 2d 50 10 60 00    	sub    $0x601050,%rax
  40058c:	48 83 f8 0e          	cmp    $0xe,%rax
  400590:	48 89 e5             	mov    %rsp,%rbp
  400593:	76 1b                	jbe    4005b0 <deregister_tm_clones+0x30>
  400595:	b8 00 00 00 00       	mov    $0x0,%eax
  40059a:	48 85 c0             	test   %rax,%rax
  40059d:	74 11                	je     4005b0 <deregister_tm_clones+0x30>
  40059f:	5d                   	pop    %rbp
  4005a0:	bf 50 10 60 00       	mov    $0x601050,%edi
  4005a5:	ff e0                	jmpq   *%rax
  4005a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4005ae:	00 00 
  4005b0:	5d                   	pop    %rbp
  4005b1:	c3                   	retq   
  4005b2:	0f 1f 40 00          	nopl   0x0(%rax)
  4005b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4005bd:	00 00 00 

00000000004005c0 <register_tm_clones>:
  4005c0:	be 50 10 60 00       	mov    $0x601050,%esi
  4005c5:	55                   	push   %rbp
  4005c6:	48 81 ee 50 10 60 00 	sub    $0x601050,%rsi
  4005cd:	48 c1 fe 03          	sar    $0x3,%rsi
  4005d1:	48 89 e5             	mov    %rsp,%rbp
  4005d4:	48 89 f0             	mov    %rsi,%rax
  4005d7:	48 c1 e8 3f          	shr    $0x3f,%rax
  4005db:	48 01 c6             	add    %rax,%rsi
  4005de:	48 d1 fe             	sar    %rsi
  4005e1:	74 15                	je     4005f8 <register_tm_clones+0x38>
  4005e3:	b8 00 00 00 00       	mov    $0x0,%eax
  4005e8:	48 85 c0             	test   %rax,%rax
  4005eb:	74 0b                	je     4005f8 <register_tm_clones+0x38>
  4005ed:	5d                   	pop    %rbp
  4005ee:	bf 50 10 60 00       	mov    $0x601050,%edi
  4005f3:	ff e0                	jmpq   *%rax
  4005f5:	0f 1f 00             	nopl   (%rax)
  4005f8:	5d                   	pop    %rbp
  4005f9:	c3                   	retq   
  4005fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400600 <__do_global_dtors_aux>:
  400600:	80 3d 49 0a 20 00 00 	cmpb   $0x0,0x200a49(%rip)        # 601050 <__TMC_END__>
  400607:	75 11                	jne    40061a <__do_global_dtors_aux+0x1a>
  400609:	55                   	push   %rbp
  40060a:	48 89 e5             	mov    %rsp,%rbp
  40060d:	e8 6e ff ff ff       	callq  400580 <deregister_tm_clones>
  400612:	5d                   	pop    %rbp
  400613:	c6 05 36 0a 20 00 01 	movb   $0x1,0x200a36(%rip)        # 601050 <__TMC_END__>
  40061a:	f3 c3                	repz retq 
  40061c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400620 <frame_dummy>:
  400620:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  400625:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400629:	75 05                	jne    400630 <frame_dummy+0x10>
  40062b:	eb 93                	jmp    4005c0 <register_tm_clones>
  40062d:	0f 1f 00             	nopl   (%rax)
  400630:	b8 00 00 00 00       	mov    $0x0,%eax
  400635:	48 85 c0             	test   %rax,%rax
  400638:	74 f1                	je     40062b <frame_dummy+0xb>
  40063a:	55                   	push   %rbp
  40063b:	48 89 e5             	mov    %rsp,%rbp
  40063e:	ff d0                	callq  *%rax
  400640:	5d                   	pop    %rbp
  400641:	e9 7a ff ff ff       	jmpq   4005c0 <register_tm_clones>

0000000000400646 <FLAG>:
  400646:	55                   	push   %rbp
  400647:	48 89 e5             	mov    %rsp,%rbp
  40064a:	48 83 ec 70          	sub    $0x70,%rsp
  40064e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  400655:	00 00 
  400657:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40065b:	31 c0                	xor    %eax,%eax
  40065d:	c6 45 a0 16          	movb   $0x16,-0x60(%rbp)
  400661:	c6 45 a1 0e          	movb   $0xe,-0x5f(%rbp)
  400665:	c6 45 a2 06          	movb   $0x6,-0x5e(%rbp)
  400669:	c6 45 a3 43          	movb   $0x43,-0x5d(%rbp)
  40066d:	c6 45 a4 04          	movb   $0x4,-0x5c(%rbp)
  400671:	c6 45 a5 30          	movb   $0x30,-0x5b(%rbp)
  400675:	c6 45 a6 15          	movb   $0x15,-0x5a(%rbp)
  400679:	c6 45 a7 06          	movb   $0x6,-0x59(%rbp)
  40067d:	c6 45 a8 45          	movb   $0x45,-0x58(%rbp)
  400681:	c6 45 a9 30          	movb   $0x30,-0x57(%rbp)
  400685:	c6 45 aa 09          	movb   $0x9,-0x56(%rbp)
  400689:	c6 45 ab 12          	movb   $0x12,-0x55(%rbp)
  40068d:	c6 45 ac 46          	movb   $0x46,-0x54(%rbp)
  400691:	c6 45 ad 1f          	movb   $0x1f,-0x53(%rbp)
  400695:	c6 45 ae 0a          	movb   $0xa,-0x52(%rbp)
  400699:	c6 45 af 07          	movb   $0x7,-0x51(%rbp)
  40069d:	c6 45 b0 3a          	movb   $0x3a,-0x50(%rbp)
  4006a1:	c6 45 b1 2a          	movb   $0x2a,-0x4f(%rbp)
  4006a5:	c6 45 b2 4f          	movb   $0x4f,-0x4e(%rbp)
  4006a9:	c6 45 b3 62          	movb   $0x62,-0x4d(%rbp)
  4006ad:	48 b8 46 6f 72 20 6c 	movabs $0x6e616f6c20726f46,%rax
  4006b4:	6f 61 6e 
  4006b7:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  4006bb:	48 b8 20 6f 66 74 20 	movabs $0x736f6c2074666f20,%rax
  4006c2:	6c 6f 73 
  4006c5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  4006c9:	48 b8 65 73 20 62 6f 	movabs $0x2068746f62207365,%rax
  4006d0:	74 68 20 
  4006d3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4006d7:	48 b8 69 74 73 65 6c 	movabs $0x6120666c65737469,%rax
  4006de:	66 20 61 
  4006e1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4006e5:	48 b8 6e 64 20 66 72 	movabs $0x6e6569726620646e,%rax
  4006ec:	69 65 6e 
  4006ef:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4006f3:	66 c7 45 e8 64 2c    	movw   $0x2c64,-0x18(%rbp)
  4006f9:	c6 45 ea 00          	movb   $0x0,-0x16(%rbp)
  4006fd:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
  400704:	eb 24                	jmp    40072a <FLAG+0xe4>
  400706:	8b 45 9c             	mov    -0x64(%rbp),%eax
  400709:	48 98                	cltq   
  40070b:	0f b6 54 05 c0       	movzbl -0x40(%rbp,%rax,1),%edx
  400710:	8b 45 9c             	mov    -0x64(%rbp),%eax
  400713:	48 98                	cltq   
  400715:	0f b6 44 05 a0       	movzbl -0x60(%rbp,%rax,1),%eax
  40071a:	31 d0                	xor    %edx,%eax
  40071c:	0f b6 c0             	movzbl %al,%eax
  40071f:	89 c7                	mov    %eax,%edi
  400721:	e8 ca fd ff ff       	callq  4004f0 <putchar@plt>
  400726:	83 45 9c 01          	addl   $0x1,-0x64(%rbp)
  40072a:	8b 45 9c             	mov    -0x64(%rbp),%eax
  40072d:	83 f8 13             	cmp    $0x13,%eax
  400730:	76 d4                	jbe    400706 <FLAG+0xc0>
  400732:	bf 84 08 40 00       	mov    $0x400884,%edi
  400737:	e8 c4 fd ff ff       	callq  400500 <puts@plt>
  40073c:	90                   	nop
  40073d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400741:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  400748:	00 00 
  40074a:	74 05                	je     400751 <FLAG+0x10b>
  40074c:	e8 bf fd ff ff       	callq  400510 <__stack_chk_fail@plt>
  400751:	c9                   	leaveq 
  400752:	c3                   	retq   

0000000000400753 <main>:
  400753:	55                   	push   %rbp
  400754:	48 89 e5             	mov    %rsp,%rbp
  400757:	48 83 ec 10          	sub    $0x10,%rsp
  40075b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  400762:	00 00 
  400764:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400768:	31 c0                	xor    %eax,%eax
  40076a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  400771:	bf 85 08 40 00       	mov    $0x400885,%edi
  400776:	e8 85 fd ff ff       	callq  400500 <puts@plt>
  40077b:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  40077f:	48 89 c6             	mov    %rax,%rsi
  400782:	bf 93 08 40 00       	mov    $0x400893,%edi
  400787:	b8 00 00 00 00       	mov    $0x0,%eax
  40078c:	e8 b5 fe ff ff       	callq  400646 <FLAG>
  400791:	c7 45 f4 03 00 00 00 	movl   $0x3,-0xc(%rbp)
  400798:	eb 22                	jmp    4007bc <main+0x69>
  40079a:	8b 45 f0             	mov    -0x10(%rbp),%eax
  40079d:	99                   	cltd   
  40079e:	f7 7d f4             	idivl  -0xc(%rbp)
  4007a1:	89 d0                	mov    %edx,%eax
  4007a3:	85 c0                	test   %eax,%eax
  4007a5:	75 11                	jne    4007b8 <main+0x65>
  4007a7:	bf 96 08 40 00       	mov    $0x400896,%edi
  4007ac:	e8 4f fd ff ff       	callq  400500 <puts@plt>
  4007b1:	b8 00 00 00 00       	mov    $0x0,%eax
  4007b6:	eb 23                	jmp    4007db <main+0x88>
  4007b8:	83 45 f4 02          	addl   $0x2,-0xc(%rbp)
  4007bc:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4007bf:	0f af 45 f4          	imul   -0xc(%rbp),%eax
  4007c3:	89 c2                	mov    %eax,%edx
  4007c5:	8b 45 f0             	mov    -0x10(%rbp),%eax
  4007c8:	39 c2                	cmp    %eax,%edx
  4007ca:	7c ce                	jl     40079a <main+0x47>
  4007cc:	bf a7 08 40 00       	mov    $0x4008a7,%edi
  4007d1:	e8 2a fd ff ff       	callq  400500 <puts@plt>
  4007d6:	b8 00 00 00 00       	mov    $0x0,%eax
  4007db:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4007df:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  4007e6:	00 00 
  4007e8:	74 05                	je     4007ef <main+0x9c>
  4007ea:	e8 21 fd ff ff       	callq  400510 <__stack_chk_fail@plt>
  4007ef:	c9                   	leaveq 
  4007f0:	c3                   	retq   
  4007f1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4007f8:	00 00 00 
  4007fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400800 <__libc_csu_init>:
  400800:	41 57                	push   %r15
  400802:	41 56                	push   %r14
  400804:	41 89 ff             	mov    %edi,%r15d
  400807:	41 55                	push   %r13
  400809:	41 54                	push   %r12
  40080b:	4c 8d 25 fe 05 20 00 	lea    0x2005fe(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400812:	55                   	push   %rbp
  400813:	48 8d 2d fe 05 20 00 	lea    0x2005fe(%rip),%rbp        # 600e18 <__init_array_end>
  40081a:	53                   	push   %rbx
  40081b:	49 89 f6             	mov    %rsi,%r14
  40081e:	49 89 d5             	mov    %rdx,%r13
  400821:	4c 29 e5             	sub    %r12,%rbp
  400824:	48 83 ec 08          	sub    $0x8,%rsp
  400828:	48 c1 fd 03          	sar    $0x3,%rbp
  40082c:	e8 87 fc ff ff       	callq  4004b8 <_init>
  400831:	48 85 ed             	test   %rbp,%rbp
  400834:	74 20                	je     400856 <__libc_csu_init+0x56>
  400836:	31 db                	xor    %ebx,%ebx
  400838:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40083f:	00 
  400840:	4c 89 ea             	mov    %r13,%rdx
  400843:	4c 89 f6             	mov    %r14,%rsi
  400846:	44 89 ff             	mov    %r15d,%edi
  400849:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40084d:	48 83 c3 01          	add    $0x1,%rbx
  400851:	48 39 eb             	cmp    %rbp,%rbx
  400854:	75 ea                	jne    400840 <__libc_csu_init+0x40>
  400856:	48 83 c4 08          	add    $0x8,%rsp
  40085a:	5b                   	pop    %rbx
  40085b:	5d                   	pop    %rbp
  40085c:	41 5c                	pop    %r12
  40085e:	41 5d                	pop    %r13
  400860:	41 5e                	pop    %r14
  400862:	41 5f                	pop    %r15
  400864:	c3                   	retq   
  400865:	90                   	nop
  400866:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40086d:	00 00 00 

0000000000400870 <__libc_csu_fini>:
  400870:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400874 <_fini>:
  400874:	48 83 ec 08          	sub    $0x8,%rsp
  400878:	48 83 c4 08          	add    $0x8,%rsp
  40087c:	c3                   	retq   

Disassembly of section .rodata:

0000000000400880 <_IO_stdin_used>:
  400880:	01 00                	add    %eax,(%rax)
  400882:	02 00                	add    (%rax),%al
  400884:	00 49 6e             	add    %cl,0x6e(%rcx)
  400887:	70 75                	jo     4008fe <__GNU_EH_FRAME_HDR+0x46>
  400889:	74 20                	je     4008ab <_IO_stdin_used+0x2b>
  40088b:	61                   	(bad)  
  40088c:	20 70 72             	and    %dh,0x72(%rax)
  40088f:	69 6d 65 00 25 64 00 	imul   $0x642500,0x65(%rbp),%ebp
  400896:	70 20                	jo     4008b8 <__GNU_EH_FRAME_HDR>
  400898:	69 73 20 6e 6f 74 20 	imul   $0x20746f6e,0x20(%rbx),%esi
  40089f:	61                   	(bad)  
  4008a0:	20 70 72             	and    %dh,0x72(%rax)
  4008a3:	69 6d 65 00 70 20 69 	imul   $0x69207000,0x65(%rbp),%ebp
  4008aa:	73 20                	jae    4008cc <__GNU_EH_FRAME_HDR+0x14>
  4008ac:	61                   	(bad)  
  4008ad:	20 70 72             	and    %dh,0x72(%rax)
  4008b0:	69                   	.byte 0x69
  4008b1:	6d                   	insl   (%dx),%es:(%rdi)
  4008b2:	65 21 00             	and    %eax,%gs:(%rax)

Disassembly of section .eh_frame_hdr:

00000000004008b8 <__GNU_EH_FRAME_HDR>:
  4008b8:	01 1b                	add    %ebx,(%rbx)
  4008ba:	03 3b                	add    (%rbx),%edi
  4008bc:	3c 00                	cmp    $0x0,%al
  4008be:	00 00                	add    %al,(%rax)
  4008c0:	06                   	(bad)  
  4008c1:	00 00                	add    %al,(%rax)
  4008c3:	00 28                	add    %ch,(%rax)
  4008c5:	fc                   	cld    
  4008c6:	ff                   	(bad)  
  4008c7:	ff 88 00 00 00 98    	decl   -0x68000000(%rax)
  4008cd:	fc                   	cld    
  4008ce:	ff                   	(bad)  
  4008cf:	ff 58 00             	lcallq *0x0(%rax)
  4008d2:	00 00                	add    %al,(%rax)
  4008d4:	8e fd                	mov    %ebp,%?
  4008d6:	ff                   	(bad)  
  4008d7:	ff b0 00 00 00 9b    	pushq  -0x65000000(%rax)
  4008dd:	fe                   	(bad)  
  4008de:	ff                   	(bad)  
  4008df:	ff d0                	callq  *%rax
  4008e1:	00 00                	add    %al,(%rax)
  4008e3:	00 48 ff             	add    %cl,-0x1(%rax)
  4008e6:	ff                   	(bad)  
  4008e7:	ff f0                	push   %rax
  4008e9:	00 00                	add    %al,(%rax)
  4008eb:	00 b8 ff ff ff 38    	add    %bh,0x38ffffff(%rax)
  4008f1:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

00000000004008f8 <__FRAME_END__-0x110>:
  4008f8:	14 00                	adc    $0x0,%al
  4008fa:	00 00                	add    %al,(%rax)
  4008fc:	00 00                	add    %al,(%rax)
  4008fe:	00 00                	add    %al,(%rax)
  400900:	01 7a 52             	add    %edi,0x52(%rdx)
  400903:	00 01                	add    %al,(%rcx)
  400905:	78 10                	js     400917 <__GNU_EH_FRAME_HDR+0x5f>
  400907:	01 1b                	add    %ebx,(%rbx)
  400909:	0c 07                	or     $0x7,%al
  40090b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  400911:	00 00                	add    %al,(%rax)
  400913:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400916:	00 00                	add    %al,(%rax)
  400918:	38 fc                	cmp    %bh,%ah
  40091a:	ff                   	(bad)  
  40091b:	ff 2a                	ljmpq  *(%rdx)
	...
  400925:	00 00                	add    %al,(%rax)
  400927:	00 14 00             	add    %dl,(%rax,%rax,1)
  40092a:	00 00                	add    %al,(%rax)
  40092c:	00 00                	add    %al,(%rax)
  40092e:	00 00                	add    %al,(%rax)
  400930:	01 7a 52             	add    %edi,0x52(%rdx)
  400933:	00 01                	add    %al,(%rcx)
  400935:	78 10                	js     400947 <__GNU_EH_FRAME_HDR+0x8f>
  400937:	01 1b                	add    %ebx,(%rbx)
  400939:	0c 07                	or     $0x7,%al
  40093b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  400941:	00 00                	add    %al,(%rax)
  400943:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400946:	00 00                	add    %al,(%rax)
  400948:	98                   	cwtl   
  400949:	fb                   	sti    
  40094a:	ff                   	(bad)  
  40094b:	ff 60 00             	jmpq   *0x0(%rax)
  40094e:	00 00                	add    %al,(%rax)
  400950:	00 0e                	add    %cl,(%rsi)
  400952:	10 46 0e             	adc    %al,0xe(%rsi)
  400955:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400958:	0b 77 08             	or     0x8(%rdi),%esi
  40095b:	80 00 3f             	addb   $0x3f,(%rax)
  40095e:	1a 3b                	sbb    (%rbx),%bh
  400960:	2a 33                	sub    (%rbx),%dh
  400962:	24 22                	and    $0x22,%al
  400964:	00 00                	add    %al,(%rax)
  400966:	00 00                	add    %al,(%rax)
  400968:	1c 00                	sbb    $0x0,%al
  40096a:	00 00                	add    %al,(%rax)
  40096c:	44 00 00             	add    %r8b,(%rax)
  40096f:	00 d6                	add    %dl,%dh
  400971:	fc                   	cld    
  400972:	ff                   	(bad)  
  400973:	ff 0d 01 00 00 00    	decl   0x1(%rip)        # 40097a <__GNU_EH_FRAME_HDR+0xc2>
  400979:	41 0e                	rex.B (bad) 
  40097b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400981:	03 08                	add    (%rax),%ecx
  400983:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
  400986:	08 00                	or     %al,(%rax)
  400988:	1c 00                	sbb    $0x0,%al
  40098a:	00 00                	add    %al,(%rax)
  40098c:	64 00 00             	add    %al,%fs:(%rax)
  40098f:	00 c3                	add    %al,%bl
  400991:	fd                   	std    
  400992:	ff                   	(bad)  
  400993:	ff 9e 00 00 00 00    	lcallq *0x0(%rsi)
  400999:	41 0e                	rex.B (bad) 
  40099b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4009a1:	02 99 0c 07 08 00    	add    0x8070c(%rcx),%bl
  4009a7:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
  4009ab:	00 84 00 00 00 50 fe 	add    %al,-0x1b00000(%rax,%rax,1)
  4009b2:	ff                   	(bad)  
  4009b3:	ff 65 00             	jmpq   *0x0(%rbp)
  4009b6:	00 00                	add    %al,(%rax)
  4009b8:	00 42 0e             	add    %al,0xe(%rdx)
  4009bb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
  4009c1:	8e 03                	mov    (%rbx),%es
  4009c3:	45 0e                	rex.RB (bad) 
  4009c5:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
  4009cb:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86701819 <_end+0xffffffff861007c1>
  4009d1:	06                   	(bad)  
  4009d2:	48 0e                	rex.W (bad) 
  4009d4:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  4009da:	72 0e                	jb     4009ea <__GNU_EH_FRAME_HDR+0x132>
  4009dc:	38 41 0e             	cmp    %al,0xe(%rcx)
  4009df:	30 41 0e             	xor    %al,0xe(%rcx)
  4009e2:	28 42 0e             	sub    %al,0xe(%rdx)
  4009e5:	20 42 0e             	and    %al,0xe(%rdx)
  4009e8:	18 42 0e             	sbb    %al,0xe(%rdx)
  4009eb:	10 42 0e             	adc    %al,0xe(%rdx)
  4009ee:	08 00                	or     %al,(%rax)
  4009f0:	14 00                	adc    $0x0,%al
  4009f2:	00 00                	add    %al,(%rax)
  4009f4:	cc                   	int3   
  4009f5:	00 00                	add    %al,(%rax)
  4009f7:	00 78 fe             	add    %bh,-0x2(%rax)
  4009fa:	ff                   	(bad)  
  4009fb:	ff 02                	incl   (%rdx)
	...

0000000000400a08 <__FRAME_END__>:
  400a08:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	20 06                	and    %al,(%rsi)
  600e12:	40 00 00             	add    %al,(%rax)
  600e15:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	00 06                	add    %al,(%rsi)
  600e1a:	40 00 00             	add    %al,(%rax)
  600e1d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	01 00                	add    %eax,(%rax)
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	0c 00                	or     $0x0,%al
  600e3a:	00 00                	add    %al,(%rax)
  600e3c:	00 00                	add    %al,(%rax)
  600e3e:	00 00                	add    %al,(%rax)
  600e40:	b8 04 40 00 00       	mov    $0x4004,%eax
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600e4d <_DYNAMIC+0x25>
  600e4d:	00 00                	add    %al,(%rax)
  600e4f:	00 74 08 40          	add    %dh,0x40(%rax,%rcx,1)
  600e53:	00 00                	add    %al,(%rax)
  600e55:	00 00                	add    %al,(%rax)
  600e57:	00 19                	add    %bl,(%rcx)
  600e59:	00 00                	add    %al,(%rax)
  600e5b:	00 00                	add    %al,(%rax)
  600e5d:	00 00                	add    %al,(%rax)
  600e5f:	00 10                	add    %dl,(%rax)
  600e61:	0e                   	(bad)  
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 1b                	add    %bl,(%rbx)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 08                	add    %cl,(%rax)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 1a                	add    %bl,(%rdx)
  600e79:	00 00                	add    %al,(%rax)
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 18                	add    %bl,(%rax)
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    %al,(%rax)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	08 00                	or     %al,(%rax)
  600e92:	00 00                	add    %al,(%rax)
  600e94:	00 00                	add    %al,(%rax)
  600e96:	00 00                	add    %al,(%rax)
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 60 03             	add    %ah,0x3(%rax)
  600eb2:	40 00 00             	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 06                	add    %al,(%rsi)
  600eb9:	00 00                	add    %al,(%rax)
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 0a                	add    %cl,(%rdx)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 79 00             	add    %bh,0x0(%rcx)
  600ed2:	00 00                	add    %al,(%rax)
  600ed4:	00 00                	add    %al,(%rax)
  600ed6:	00 00                	add    %al,(%rax)
  600ed8:	0b 00                	or     (%rax),%eax
  600eda:	00 00                	add    %al,(%rax)
  600edc:	00 00                	add    %al,(%rax)
  600ede:	00 00                	add    %al,(%rax)
  600ee0:	18 00                	sbb    %al,(%rax)
  600ee2:	00 00                	add    %al,(%rax)
  600ee4:	00 00                	add    %al,(%rax)
  600ee6:	00 00                	add    %al,(%rax)
  600ee8:	15 00 00 00 00       	adc    $0x0,%eax
	...
  600ef5:	00 00                	add    %al,(%rax)
  600ef7:	00 03                	add    %al,(%rbx)
	...
  600f01:	10 60 00             	adc    %ah,0x0(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	02 00                	add    (%rax),%al
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	78 00                	js     600f12 <_DYNAMIC+0xea>
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	14 00                	adc    $0x0,%al
  600f1a:	00 00                	add    %al,(%rax)
  600f1c:	00 00                	add    %al,(%rax)
  600f1e:	00 00                	add    %al,(%rax)
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 17                	add    %dl,(%rdi)
  600f29:	00 00                	add    %al,(%rax)
  600f2b:	00 00                	add    %al,(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 40 04             	add    %al,0x4(%rax)
  600f32:	40 00 00             	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 07                	add    %al,(%rdi)
  600f39:	00 00                	add    %al,(%rax)
  600f3b:	00 00                	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 28                	add    %ch,(%rax)
  600f41:	04 40                	add    $0x40,%al
  600f43:	00 00                	add    %al,(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 08                	add    %cl,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 18                	add    %bl,(%rax)
  600f51:	00 00                	add    %al,(%rax)
  600f53:	00 00                	add    %al,(%rax)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 09                	add    %cl,(%rcx)
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 18                	add    %bl,(%rax)
  600f61:	00 00                	add    %al,(%rax)
  600f63:	00 00                	add    %al,(%rax)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 fe                	add    %bh,%dh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 e8                	add    %ch,%al
  600f71:	03 40 00             	add    0x0(%rax),%eax
  600f74:	00 00                	add    %al,(%rax)
  600f76:	00 00                	add    %al,(%rax)
  600f78:	ff                   	(bad)  
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 01                	add    %al,(%rcx)
  600f81:	00 00                	add    %al,(%rax)
  600f83:	00 00                	add    %al,(%rax)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 f0                	add    %dh,%al
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f8d:	00 00                	add    %al,(%rax)
  600f8f:	00 da                	add    %bl,%dl
  600f91:	03 40 00             	add    0x0(%rax),%eax
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 f6                	add    %dh,%dh
  601019:	04 40                	add    $0x40,%al
  60101b:	00 00                	add    %al,(%rax)
  60101d:	00 00                	add    %al,(%rax)
  60101f:	00 06                	add    %al,(%rsi)
  601021:	05 40 00 00 00       	add    $0x40,%eax
  601026:	00 00                	add    %al,(%rax)
  601028:	16                   	(bad)  
  601029:	05 40 00 00 00       	add    $0x40,%eax
  60102e:	00 00                	add    %al,(%rax)
  601030:	26                   	es
  601031:	05 40 00 00 00       	add    $0x40,%eax
  601036:	00 00                	add    %al,(%rax)
  601038:	36                   	ss
  601039:	05 40 00 00 00       	add    $0x40,%eax
	...

Disassembly of section .data:

0000000000601040 <__data_start>:
	...

0000000000601048 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601050 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400440>
   a:	74 75                	je     81 <_init-0x400437>
   c:	20 35 2e 34 2e 30    	and    %dh,0x302e342e(%rip)        # 302e3440 <_end+0x2fce23e8>
  12:	2d 36 75 62 75       	sub    $0x75627536,%eax
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x400429>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	36 2e 30 34 2e       	ss xor %dh,%cs:%ss:(%rsi,%rbp,1)
  22:	32 29                	xor    (%rcx),%ch
  24:	20 35 2e 34 2e 30    	and    %dh,0x302e342e(%rip)        # 302e3458 <_end+0x2fce2400>
  2a:	20 32                	and    %dh,(%rdx)
  2c:	30 31                	xor    %dh,(%rcx)
  2e:	36 30 36             	xor    %dh,%ss:(%rsi)
  31:	30 39                	xor    %bh,(%rcx)
	...
